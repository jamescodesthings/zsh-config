#!/usr/bin/env zsh

# The function template
FN_TEMPLATE="${FN_TEMPLATE:-$FN_DIR/template}"
FN_TEMPLATE_REPLACE="template"

_new_fn_description="Creates a new function in $CUSTOM_DIR/functions"
_new_fn_positional="name"
_new_fn_positional_desc="The function name (kebab-case)"
_new_fn_flag_names[1]="--help"
_new_fn_flag_messages[1]="shows help"

function _new_fn_create() {
  local NAME=$1
  local LOWER_NAME=${NAME:l}
  local UNDER_NAME=${LOWER_NAME//-/_}
  local FN_PATH="$FN_DIR/$LOWER_NAME"

  if is existing "$FN_PATH"; then
    if ! confirm "$FN_PATH $cs[warn]already exists, overwrite it?$c[reset]"; then
      return 0
    fi
  fi

  echo "$cs[info]Creating$c[reset] $LOWER_NAME"
  echo "$cs[info]Using$c[reset] $FN_TEMPLATE"

  local TEMPLATE=$(cat "$FN_TEMPLATE")
  # Replace everything with underscore'd name
  TEMPLATE=${TEMPLATE//$FN_TEMPLATE_REPLACE/$UNDER_NAME}

  # Then replace any "function $UNDER_NAME" with kebab-case
  TEMPLATE=${TEMPLATE//"function $UNDER_NAME"/"function $LOWER_NAME"}

  # replace calls to $UNDER_NAME with kebab-case
  local repl="$UNDER_NAME \"\$@\""
  TEMPLATE=${TEMPLATE//$repl/"$LOWER_NAME \"\$@\""}

  # echo "$TEMPLATE"
  echo "$TEMPLATE" > "$FN_PATH"

  echo "$cs[success]Created$c[reset] $LOWER_NAME"
  autoload -Uz "$LOWER_NAME"
  echo "$cs[success]Loaded$c[reset] $LOWER_NAME"
}

function new-fn() {
  local DEPS=(
    is
  )

  if ! deps $DEPS; then
    return 1
  fi

  if is empty "$1" || has-flag '--help' $@; then
    print-help \
      "$0" \
      "$_new_fn_description" \
      "_new_fn_flag_names" \
      "_new_fn_flag_messages" \
      "$_new_fn_positional" \
      "$_new_fn_positional_desc"
    return 0
  fi

  local POSITIONAL="$@[-1]"

  if is not empty "$POSITIONAL"; then
    _new_fn_create "$POSITIONAL"
  fi
}

new-fn "$@"

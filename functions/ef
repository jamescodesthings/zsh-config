#!/usr/bin/env zsh

# todo: convert this to a param with defaults
DATA_PROJ_PATH="/Users/jamesmacmillan/projects/engineius/web-app/src/BBWT.Data.MySQL"
STARTUP_PROJ_PATH="/Users/jamesmacmillan/projects/engineius/web-app/src/BBWT.Web"
STORE_PATH="/Users/jamesmacmillan/projects/engineius/.migrations"

_ef_description="Entity Framework wrapper for the dotnet ef command that adds on boilerplate options"
_ef_flag_names[1]="--help"
_ef_flag_messages[1]="shows help"
_ef_flag_names[2]="--store"
_ef_flag_messages[2]="stores the names of the last 2 migrations for use in script"
_ef_flag_names[3]="--reload"
_ef_flag_messages[3]="reloads stored migration names from $STORE_PATH"
_ef_flag_names[4]="--print"
_ef_flag_messages[4]="prints the stored migration names"
_ef_flag_names[5]="--script-migrate"
_ef_flag_messages[5]="scripts the migration between the last two migrations"
_ef_flag_names[6]="--script-revert"
_ef_flag_messages[6]="scripts the revert between the last two migrations"

function _ef_print_stored() {
  if is empty "$EF_LAST"; then
    echo "$cs[error]EF_LAST not stored yet,$c[reset] run $cs[default]ef --store$c[reset] first."
    return 1
  fi
  if is empty "$EF_PREV"; then
    echo "$cs[error]EF_PREV not stored yet,$c[reset] $cs[default]ef --store$c[reset] first."
    return 1
  fi

  echo "$cs[h3]Last Migration (-1):$c[reset] $EF_LAST"
  echo "$cs[h3]Previous Migration (-2):$c[reset] $EF_PREV"
}

function _ef_store() {
  # Store the last 2 migrations in the env for later use
  ALL_MIGRATIONS=$(_ef_default migrations list)

  export EF_LAST=$(echo $ALL_MIGRATIONS | tail -1)
  export EF_PREV=$(echo $ALL_MIGRATIONS | tail -2 | head -1)

  _ef_save_store

  echo "$cs[success]Stored Last 2 migrations$c[reset]"
  _ef_print_stored
}

function _ef_save_store() {
  echo "$EF_PREV" > $STORE_PATH
  echo "$EF_LAST" >> $STORE_PATH
}

function _ef_reload_store() {
  if is not existing "$STORE_PATH"; then
    echo "$cs[error]Migrations have not been stored yet,$c[reset] run $cs[default]ef --store$c[reset] first."
    return 1
  fi
  RAW_RELOAD=$(cat $STORE_PATH)
  if is empty "$RAW_RELOAD"; then
    echo "$cs[error]Migrations have not been stored yet,$c[reset] run $cs[default]ef --store$c[reset] first."
    return 1
  fi

  export EF_LAST=$(echo $RAW_RELOAD | tail -1)
  export EF_PREV=$(echo $RAW_RELOAD | tail -2 | head -1)

  echo "$cs[success]Restored:$c[reset]"
  _ef_print_stored
}

function _ef_script_migration(){
  if is empty "$EF_LAST"; then
    echo "$cs[error]EF_LAST not stored yet,$c[reset] run $cs[default]ef --store$c[reset] first."
    return 1
  fi
  if is empty "$EF_PREV"; then
    echo "$cs[error]EF_PREV not stored yet,$c[reset] $cs[default]ef --store$c[reset] first."
    return 1
  fi

  echo "$c[cyan]Scripting migration $c[reset]$EF_PREV $c[magenta]->$c[reset] $EF_LAST"

  _ef_default migrations script $EF_PREV $EF_LAST -o "migrate-last.sql"
}

function _ef_script_revert(){
  if is empty "$EF_LAST"; then
    echo "$cs[error]EF_LAST not stored yet,$c[reset] run $cs[default]ef --store$c[reset] first."
    return 1
  fi
  if is empty "$EF_PREV"; then
    echo "$cs[error]EF_PREV not stored yet,$c[reset] $cs[default]ef --store$c[reset] first."
    return 1
  fi

  echo "$c[cyan]Scripting revert $c[reset]$EF_LAST $c[magenta]->$c[reset] $EF_PREv"

  _ef_default migrations script $EF_LAST $EF_PREV -o "revert-last.sql"
}

function _ef_default() {
  echo "$cs[h3]Running:$c[reset] dotnet ef $@"

  CURRENT_DIR=$(pwd)
  RELATIVE_DATA_PATH=$(realpath --relative-to=$CURRENT_DIR $DATA_PROJ_PATH)
  RELATIVE_STARTUP_PATH=$(realpath --relative-to=$CURRENT_DIR $STARTUP_PROJ_PATH)

  EXTRAS="-p $RELATIVE_DATA_PATH -s $RELATIVE_STARTUP_PATH -c DataContext"
  echo "$cs[h3]With Options:$c[reset] $EXTRAS"


  FINAL_COMMAND="dotnet ef $@ $EXTRAS"
  eval "$FINAL_COMMAND"
}


# ef: Lazy issue mentions in a git commit -m
function ef () {
  local DEPS=(
    is
    dotnet
  )

  if ! deps $DEPS; then
    return
  fi

  if is empty "$1" || has-flag '--help' $@; then
    print-help "$0" "$_ef_description" "_ef_flag_names" "_ef_flag_messages"
    return 0
  fi

  if has-flag "--store" $@; then
    _ef_store
    return $?
  fi
  if has-flag "--reload" $@; then
    _ef_reload_store
    return $?
  fi

  if has-flag "--print" $@; then
    _ef_print_stored
    return $?
  fi

  if has-flag "--script-migrate" $@; then
    _ef_script_migration
    return $?
  fi

  if has-flag "--script-revert" $@; then
    _ef_script_revert
    return $?
  fi

  _ef_default $@
}

ef "$@"

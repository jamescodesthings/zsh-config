#!/usr/bin/env zsh

function _git-changed-files-to-lint_usage() {
  clr_cyan 'Usage:' -n
  clr_white " $1" -n
  clr_green " [options]"
  clr_cyan 'Gets a list of changed files for prettier/eslint'

  echo ''
  clr_green 'Options:'
  clr_white 'help' -n
  clr_cyan ' - prints this help'
  printf '--one-line' -n
  clr_cyan ' - Outputs on one line'
  printf '--js-only' -n
  clr_cyan ' - Outputs only .js files'
  printf  '--ts-only' -n
  clr_cyan ' - Outputs only .ts files'

}

function _git-changed-files-to-lint_get-files() {
  result=$(git status --porcelain)

  result=$(_node_replace "^R.*?\->\s" "$result")
  result=$(_node_replace "^D\s\s.*?\n" "$result")
  result=$(_node_replace "^M\s\s" "$result")
  result=$(_node_replace "^A\s\s" "$result")

  echo $result;
}

NODE_REPLACE="
const regex=new RegExp(process.argv[1], 'gm');
const inputString=process.argv[2];
const replacement=process.argv[3];
console.log(inputString.replace(regex, replacement || ''));
"

function _node_replace() {
  if is empty "$1"; then
    clr_red "no regex"
    return 1;
  fi;

  if is empty "$2"; then
    clr_red "no string"
    return 1;
  fi

  result=$(node -e "$NODE_REPLACE" "$1" "$2" "$3")
  echo $result;
}

function contains() {
    string="$1"
    substring="$2"
    if test "${string#*$substring}" != "$string"
    then
        return 0    # $substring is in $string
    else
        return 1    # $substring is not in $string
    fi
}

# git-changed-files-to-lint: Lazy issue mentions in a git commit -m
function git-changed-files-to-lint () {
  opts=$@

  local DEPS=(
    is
    clr_cyan
    clr_green
    clr_white
    clr_red
    git
    node
    printf
  )

  if ! deps $DEPS; then
    return
  fi

  if is equal "$1" "help"; then
    _git-changed-files-to-lint_usage "$0"
    return 0
  fi


  result=$(_git-changed-files-to-lint_get-files)
  if contains "$opts" '--js-only'; then
    result=$(echo "$result" | grep '.js')
  fi

  if contains "$opts" '--ts-only'; then
    result=$(echo "$result" | grep -e '.ts$')
  fi

  if contains "$opts" '--one-line'; then
    result=$(echo "$result" | tr '\n' ' ')
  fi

  echo "$result";
}

git-changed-files-to-lint "$@"

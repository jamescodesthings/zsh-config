#!/usr/bin/env zsh

function git-prune-remote {
  local DEPS=(
    is
    git-branch
    git-main-branch
  )

  if ! deps $DEPS; then
    return
  fi

  local BRANCH=$(git-branch)
  local MAIN_BRANCH=$(git-main-branch)

  if [ "$BRANCH" != "$MAIN_BRANCH" ]; then
    echo "$cs[error]Warning:$c[reset] You are on branch $c[cyan]$BRANCH$c[reset] not $cs[success]$MAIN_BRANCH$c[reset]"
    echo "$cs[default]Run$c[rest] git checkout  $cs[success]$MAIN_BRANCH$c[reset] $cs[default]before running this command."
    return 1
  fi

  echo "Fetching merged branches"

  remote_branches=$(git branch -r --merged | grep -v "/$MAIN_BRANCH$" | grep -v "/$BRANCH$")
  if [ -z "$remote_branches" ]; then
    echo "No existing branches have been merged into $c[cyan]$(current_branch)$c[reset]"
    return 0
  fi

  echo "This will remove the following branches:"
  if [ -n "$remote_branches" ]; then
    echo "Remote:"
    echo "$c[cyan]$remote_branches$c[reset]"
  fi

  if confirm; then
    echo "$cs[success]Removing$c[reset]"
    # Remove remote branches
    git push origin `git branch -r --merged | grep -v "/$MAIN_BRANCH$" | grep -v "/$BRANCH$" | sed 's/origin\//:/g' | tr -d '\n'`
  else
    echo "$cs[success]No branches removed$c[reset]"
  fi
}

git-prune-remote "$@"

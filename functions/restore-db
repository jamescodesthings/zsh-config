#!/usr/bin/env zsh

DB_HOST="james-ubuntu"
DB_PORT="3306"
DB_USER="root"
DB_PASS="engineius"
CNF_FILE="db.cnf"
EXTRACTED_FILE="backup.sql"
DB_AFTER_RESTORE_SCRIPT="$HOME/projects/sql/engineius-db-restore-users.sql"
DEBUG=0

# Restores a sql database to a new db
function restore-db() {
  local DEPS=(
    is
    clr_cyan
    clr_white
    du
    gzip
    mysql
    pv
  )

  if ! deps $DEPS; then
    return
  fi

  if is not empty "$1"; then
    _restore-db_restore $@
    return
  fi
  _restore-db_help "$0"
}

function _restore-db_help() {
  clr_cyan 'Usage:' -n
  clr_white " $1 [./path/to/.tar.gz] [--no-fix|--no-delete]\n"

  clr_cyan 'Restores the DB SQL file in the .tar.gz.'
  clr_cyan 'Options:'
  echo "--no-fix: Does not run the after script"
  echo "--no-delete: Does not DROP and recreate the DB"
  echo "--compare: dumps to a -compare database"
}

function _restore-db_restore() {
  clr_cyan 'Restoring ' -n
  clr_white "$1"

  DB_FILE="$1"

  if is not existing "$DB_FILE"; then
    clr_red "Could not find file $1"
    return 1
  fi

  DB_DATE=$(echo "$DB_FILE" | rg -o "\d+\-\d+\-\d+")

  if is not empty "$DB_DATE"; then
    clr_cyan "Dump Date: " -n
    clr_white "$DB_DATE"
  else
    clr_red "Could not work out dump date"
    return 1
  fi

  _restore-db_create-conf "$CNF_FILE"

  _restore-db_extract "$DB_FILE"

  if is not existing "$EXTRACTED_FILE"; then
    clr_red "$DB_FILE was not successfully extracted to $EXTRACTED_FILE"
  fi

  DB_NAME="app_prod_$DB_DATE"

  if is equal "$2" "--compare"; then
    DB_NAME="${DB_NAME}_compare"
  fi

  if is not equal "$2" "--no-delete"; then
    clr_cyan "Creating: " -n
    clr_white "$DB_NAME"

    _restore-db_mysql "DROP DATABASE IF EXISTS \`$DB_NAME\`"

    _restore-db_mysql "CREATE DATABASE \`$DB_NAME\` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci"

    if is not equal "$?" "0"; then
      clr_red "Could not create database"
      _restore_db_cleanup
      return 1
    fi
  fi

  _restore-db_mysql-script "$DB_NAME" "$EXTRACTED_FILE"

  if is not equal "$?" "0"; then
    clr_red "Script failed: $EXTRACTED_FILE"
    _restore_db_cleanup
    return 1
  fi

  if is equal "$2" "--no-fix"; then
    clr_cyan "Not running $DB_AFTER_RESTORE_SCRIPT due to --no-fix option"
  elif is equal "$2" " --no-delete"; then
    clr_cyan "Not running $DB_AFTER_RESTORE_SCRIPT due to --no-delete option"
  else
    _restore-db_mysql-script "$DB_NAME" "$DB_AFTER_RESTORE_SCRIPT"

    if is not equal "$?" "0"; then
      clr_red "Script failed: $DB_AFTER_RESTORE_SCRIPT"
      _restore_db_cleanup
      return 1
    fi
  fi

  _restore_db_cleanup
  clr_green "Done"
}

function _restore-db_mysql() {
  if is equal "1" "$DEBUG"; then
    clr_cyan "Sql: " -n
    clr_white "$1"
  fi
  mysql --defaults-extra-file=$CNF_FILE -e $1
}

function _restore-db_mysql-script() {
  if is not existing "$2"; then
    clr_red "Could not find $2"
    return 1
  fi

  if is empty "$1"; then
    clr_red "No DB selected?"
    return 1
  fi

  FILE_SIZE=$(du -h $2 | rg -o ".*?\s" | xargs)
  clr_cyan "Run SQL Script: " -n
  clr_white "$2 ($FILE_SIZE) " -n
  clr_cyan "on " -n
  clr_white "$1"

  pv $2 | mysql --defaults-extra-file=$CNF_FILE $1
}

function _restore_db_cleanup() {
  clr_cyan "Cleaning up"
  _restore-db_remove-conf
  _restore-db_remove_backup_file
}

function _restore-db_create-conf() {
  echo "[client]" > $CNF_FILE
  echo "user=$DB_USER" >> $CNF_FILE
  echo "password=$DB_PASS" >> $CNF_FILE
  echo "host=$DB_HOST" >> $CNF_FILE
  echo "port=$DB_PORT" >> $CNF_FILE
}

function _restore-db_remove-conf() {
  if is existing "$CNF_FILE"; then
    if is equal "1" "$DEBUG"; then
      clr_cyan "Deleting $CNF_FILE"
    fi
    rm $CNF_FILE
  fi
}

function _restore-db_extract() {
  clr_cyan 'Extracting ' -n
  clr_white "$1 " -n
  clr_cyan "to " -n
  clr_white "$EXTRACTED_FILE"
  gzip -c -d "$1" > $EXTRACTED_FILE
}

function _restore-db_remove_backup_file() {
  if is existing "$EXTRACTED_FILE"; then
    if is equal "1" "$DEBUG"; then
      clr_cyan "Deleting $EXTRACTED_FILE"
    fi
    rm $EXTRACTED_FILE
  fi
}

restore-db "$@"
